---
export const prerender = false;

import BaseLayout from '../../layouts/BaseLayout.astro';
import '../../styles/global.css';

let formSuccess = false;
let formError = null;

if (Astro.request.method === 'POST') {
  const cookies = Astro.cookies;
  const token = cookies.get('token')?.value;
  if (!token) {
    const loginUrl = new URL('/auth/login', Astro.request.url).toString();
    return Response.redirect(loginUrl, 302);
  }

  try {
    const formData = await Astro.request.formData();
    const name = String(formData.get('name') ?? '').trim();
    const icon = String(formData.get('icon') ?? '').trim();

    // Construction conditionnelle du payload
    const data: Record<string, any> = { name };
    if (icon) {
      data.icon = icon; // n’ajoute l’emoji que s’il y en a un
    }
    const payload = { data };

    const res = await fetch('http://localhost:1337/api/categories', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(payload),
    });

    if (!res.ok) {
      const err = await res.json();
      throw new Error(err.error?.message || 'Erreur lors de la création.');
    }

    formSuccess = true;
  } catch (err) {
    console.error(err);
    formError = err instanceof Error ? err.message : String(err);
  }
}

// Couleurs déco…
const neoColors = ['neo-pink','neo-yellow','neo-blue','neo-mint','neo-peach','neo-lavender'];
const accentColor = neoColors[Math.floor(Math.random() * neoColors.length)];
---

<BaseLayout title="Nouvelle Catégorie – Économat" description="Créez une nouvelle catégorie pour organiser vos articles">
  <div class="mb-8 md:mb-12">
    <h2 class="text-2xl md:text-3xl font-bold mb-4 tracking-retro uppercase relative inline-block">
      <span class="text-petrol">[</span> NOUVELLE CATÉGORIE <span class="text-rust">]</span>
      <div class={`absolute -right-8 -top-8 w-16 h-16 opacity-20 bg-${accentColor} clip-circle hidden md:block`}></div>
    </h2>
    <p class="opacity-80 max-w-2xl">
      Les champs marqués d’un astérisque (*) sont obligatoires.
    </p>
  </div>

  {formSuccess && (
    <div class="bg-neo-mint/10 border border-l-4 border-neo-mint p-4 mb-8 neo-alert-success">
      <h3 class="font-bold text-neo-mint mb-2">Catégorie créée avec succès !</h3>
      <p class="text-sm">Redirection vers la liste…</p>
      <script is:inline>
        setTimeout(() => { window.location.href = '/categories'; }, 1500);
      </script>
    </div>
  )}

  {formError && (
    <div class="bg-rust/10 border border-l-4 border-rust p-4 mb-8 neo-alert-error">
      <h3 class="font-bold text-rust mb-2">Erreur</h3>
      <p class="text-sm">{formError}</p>
    </div>
  )}

  <div class="bg-cream border border-night/10 p-6 md:p-8 paper-cut relative overflow-hidden">
    <div class={`absolute top-0 left-0 w-full h-2 bg-${accentColor}/30`}></div>
    <div class="absolute bottom-0 right-0 w-24 h-24 opacity-5 clip-triangle transform rotate-12 bg-night"></div>
    <div class={`absolute top-1/2 right-0 w-3 h-12 bg-${accentColor}/40 transform -translate-y-1/2 hidden lg:block`}></div>
    <div class="absolute inset-0 bg-grid-dots opacity-5 pointer-events-none"></div>

    <form method="POST" class="relative z-10 neo-form">
      <div class="grid grid-cols-1 gap-y-0">
        <div class="form-field">
          <label for="category-name" class="block text-sm uppercase tracking-retro mb-1 font-bold">
            Nom de la catégorie <span class="text-rust">*</span>
          </label>
          <input
            type="text"
            id="category-name"
            name="name"
            required
            class="w-full py-2 px-3 bg-cream border border-night/30 text-sm font-mono focus:border-petrol focus:ring-1 focus:ring-petrol/30 neo-input"
            placeholder="ex : Produits laitiers, Épices…"
          />
        </div>

        <div class="form-field">
          <label for="category-icon" class="block text-sm uppercase tracking-retro mb-1 font-bold">
            Icône (emoji ou texte) – optionnel
          </label>
          <input
            type="text"
            id="category-icon"
            name="icon"
            class="w-full py-2 px-3 bg-cream border border-night/30 text-sm font-mono focus:border-petrol focus:ring-1 focus:ring-petrol/30 neo-input"
            placeholder="ex : 🍎, 🥛, 🧂"
          />
        </div>
      </div>

      <div class="my-6 flex items-center">
        <div class={`flex-grow h-px bg-${accentColor}/30`}></div>
        <div class={`mx-4 w-3 h-3 bg-${accentColor}/60`}></div>
        <div class="flex-grow h-px bg-night/10"></div>
      </div>

      <div class="flex flex-col sm:flex-row justify-center sm:justify-between gap-4 items-center mt-6">
        <a
          href="/categories"
          class="px-6 py-2 border border-night/30 font-bold uppercase text-sm hover:bg-night/5 transition neo-btn-secondary"
        >
          Annuler
        </a>
        <button
          type="submit"
          class={`px-8 py-3 bg-petrol text-cream font-bold uppercase hover:bg-${accentColor} transition neo-btn-primary relative overflow-hidden`}
        >
          <div class="absolute top-0 left-0 w-2 h-full bg-white/10"></div>
          <span class="relative z-10">💾 Enregistrer</span>
        </button>
      </div>
    </form>
  </div>
</BaseLayout>

<style>
  .neo-input {
    transition: all 0.2s ease;
    border-radius: 0;
  }
  .neo-input:focus {
    outline: none;
    box-shadow: 3px 3px 0 rgba(13,75,89,0.1);
    transform: translate(-1px, -1px);
  }
  .form-field { margin-bottom: 1.5rem; }
  .neo-alert-success,
  .neo-alert-error {
    position: relative;
    overflow: hidden;
  }
  .neo-alert-success::before,
  .neo-alert-error::before {
    content: '';
    position: absolute;
    top: 0; left: 0; width: 100%; height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
    animation: shimmer 2s infinite;
    transform: translateX(-100%);
  }
  @keyframes shimmer { 100% { transform: translateX(100%); } }
  .neo-btn-primary {
    position: relative;
    transition: all 0.3s ease;
  }
  .neo-btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 0 rgba(10,11,12,0.1);
  }
  .neo-btn-secondary {
    position: relative;
    transition: all 0.2s ease;
  }
  .neo-btn-secondary:hover { transform: translateY(-1px); }
  .neo-btn-secondary::after {
    content: '';
    position: absolute;
    bottom: -2px; left: 0; width: 100%; height: 1px;
    background-color: currentColor; opacity: 0.2;
    transform: scaleX(0.7); transition: transform 0.3s ease;
    transform-origin: center;
  }
  .neo-btn-secondary:hover::after { transform: scaleX(1); }
  .clip-circle { clip-path: circle(50% at 50% 50%); }
  .clip-triangle { clip-path: polygon(50% 0%,0% 100%,100% 100%); }
  .neo-form:focus-within { animation: pulse-border 1.5s infinite alternate; }
  @keyframes pulse-border {
    0% { box-shadow: 0 0 0 0 rgba(13,75,89,0); }
    100% { box-shadow: 0 0 0 4px rgba(13,75,89,0.05); }
  }
</style>
